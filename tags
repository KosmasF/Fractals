!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!D	M,module	/modules/
!_TAG_KIND_DESCRIPTION!D	T,template	/templates/
!_TAG_KIND_DESCRIPTION!D	V,version	/version statements/
!_TAG_KIND_DESCRIPTION!D	X,mixin	/mixins/
!_TAG_KIND_DESCRIPTION!D	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!D	c,class	/classes/
!_TAG_KIND_DESCRIPTION!D	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!D	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!D	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!D	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!D	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!D	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!D	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!D	u,union	/union names/
!_TAG_KIND_DESCRIPTION!D	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!D	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/Kosmas/Documents/Fractals/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	/v6.2.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(ASM_OBJECTS)	Makefile	/^$(ASM_OBJECTS): %_asm.o : %.asm$/;"	t
$(CPP_OBJECTS)	Makefile	/^$(CPP_OBJECTS): %_cpp.o : %.cpp $/;"	t
$(C_OBJECTS)	Makefile	/^$(C_OBJECTS): %_c.o : %.c$/;"	t
$(EXECUTABLE)	Makefile	/^$(EXECUTABLE) : $(CPP_OBJECTS) $(C_OBJECTS) $(ASM_OBJECTS)$/;"	t
%_asm.o	Makefile	/^$(ASM_OBJECTS): %_asm.o : %.asm$/;"	t
%_c.o	Makefile	/^$(C_OBJECTS): %_c.o : %.c$/;"	t
%_cpp.o	Makefile	/^$(CPP_OBJECTS): %_cpp.o : %.cpp $/;"	t
ASMFLAGS	Makefile	/^ASMFLAGS = -g$/;"	m
ASM_OBJECTS	Makefile	/^ASM_OBJECTS = $(patsubst %.asm,%_asm.o,$(ASM_SOURCES))$/;"	m
ASM_SOURCES	Makefile	/^ASM_SOURCES = $(wildcard *.asm)$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -Wall -Wextra -D_REENTRANT -MMD -MP$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -g -Wall -Wextra -D_REENTRANT -MMD -MP$/;"	m
CPP_OBJECTS	Makefile	/^CPP_OBJECTS = $(patsubst %.cpp,%_cpp.o,$(CPP_SOURCES))$/;"	m
CPP_SOURCES	Makefile	/^CPP_SOURCES = $(wildcard *.cpp)$/;"	m
CXX	Makefile	/^CXX = g++$/;"	m
C_OBJECTS	Makefile	/^C_OBJECTS = $(patsubst %.c,%_c.o,$(C_SOURCES))$/;"	m
C_SOURCES	Makefile	/^C_SOURCES = $(wildcard *.c)$/;"	m
Convergence	Utils.h	/^} Convergence;$/;"	t	typeref:struct:__anona91567cc0208
DEP_FILES	Makefile	/^DEP_FILES = $(patsubst %.o,%.d,$(CPP_OBJECTS)) $(patsubst %.o,%.d,$(C_OBJECTS))$/;"	m
EXECUTABLE	Makefile	/^EXECUTABLE = main$/;"	m
HEIGHT	main.c	/^#define HEIGHT /;"	d	file:
INC	Makefile	/^INC = -I. -I\/usr\/include\/SDL2$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -L. -L\/usr\/lib -no-pie$/;"	m
LDLIBS	Makefile	/^LDLIBS = -lm -lSDL2 -lSDL2_ttf -lOpenCL$/;"	m
Loop	Loop.c	/^bool Loop()$/;"	f	typeref:typename:bool
WIDTH	main.c	/^#define WIDTH /;"	d	file:
_LOOP_H_	Loop.h	/^#define _LOOP_H_$/;"	d
_MANDELBROT_H_	Mandelbrot.h	/^#define _MANDELBROT_H_$/;"	d
_UTILS_H_	Utils.h	/^#define _UTILS_H_$/;"	d
__anona91567cc0108	Utils.h	/^typedef struct{$/;"	s
__anona91567cc0208	Utils.h	/^typedef struct{$/;"	s
absc	Utils.h	/^float absc(cfloat a){$/;"	f	typeref:typename:float
addc	Utils.h	/^cfloat addc(cfloat a, cfloat b){$/;"	f	typeref:typename:cfloat
cfloat	Utils.h	/^} cfloat;$/;"	t	typeref:struct:__anona91567cc0108
clean	Makefile	/^clean:$/;"	t
converged	Utils.h	/^    bool converged;$/;"	m	struct:__anona91567cc0208	typeref:typename:bool
iterations	Utils.h	/^    uint32_t iterations;$/;"	m	struct:__anona91567cc0208	typeref:typename:uint32_t
main	main.c	/^int main(){$/;"	f	typeref:typename:int
mandelbrot	Mandelbrot.c	/^Convergence mandelbrot(cfloat input){$/;"	f	typeref:typename:Convergence
mulc	Utils.h	/^cfloat mulc(cfloat a, cfloat b){$/;"	f	typeref:typename:cfloat
pixels	main.c	/^uint32_t pixels[WIDTH * HEIGHT];$/;"	v	typeref:typename:uint32_t[]
x	Utils.h	/^    float x;$/;"	m	struct:__anona91567cc0108	typeref:typename:float
y	Utils.h	/^    float y;$/;"	m	struct:__anona91567cc0108	typeref:typename:float
